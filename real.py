# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'real.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import matplotlib
import matplotlib.pyplot as plt
matplotlib.use('Qt5Agg')
from PyQt5 import QtCore, QtWidgets
from PyQt5.QtWidgets import QFileDialog
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg, NavigationToolbar2QT as Navi
from matplotlib.figure import Figure
import seaborn as sns
import pandas as pd
import mplcyberpunk
import sip
import platform
import psycopg2


class DBConnection:
    def __init__(self):
        self.host = 'localhost'
        self.port = '5432'
        self.user = 'postgres'
        self.password = 'sdkn12'
        self.database = 'fqw'
        self.conn = None

    def connect(self):
        self.conn = psycopg2.connect(
            database = self.database,
            user = self.user,
            host = self.host,
            port = self.port,
            password = self.password
        )


    def write_to_db(self, *args):
        try:
            self.connect()
            cur = self.conn.cursor()
            cur.execute(f"INSERT INTO samples VALUES {args};")

        except Exception as e:
            print(e)

        finally:
            if self.conn:
                self.conn.commit()
                self.conn.close()


    def export(self, path):
        try:
            self.connect()
            cur = self.conn.cursor()
            with open(path+'/samples.csv', 'w') as file:
                file.write('Time,Temperature,Current,Voltage,Electrolyte\n')
                cur.copy_to(file, 'samples', sep=',')

        except Exception as e:
            print(e)

        finally:
            if self.conn:
                self.conn.close()


    def get_data(self, query="SELECT * FROM samples;"):
        try:
            self.connect()
            cur = self.conn.cursor()
            cur.execute(query)
            # result = cur.fetchall()
            result = pd.DataFrame(cur.fetchall(),
                                    columns=['Time', 'Temperature', 'Current', 'Voltage', 'Electrlyte'])
            # print()

            return result

        except Exception as e:
            print(e)

        finally:
            if self.conn:
                self.conn.close()


    def search(self, time, temperature, current, voltage, electrolyte):
        if not any((time, temperature, current, voltage, electrolyte)):
            return self.get_data()

        elif all((time, temperature, current, voltage, electrolyte)):
            return self.get_data(f"SELECT * FROM samples WHERE"
                                    f"time = {time}"
                                    f"AND"
                                    f"temperature = {temperature}"
                                    f"AND"
                                    f"current = {current}"
                                    f"AND"
                                    f"voltage = {voltage}"
                                    f"AND"
                                    f"electrolyte = '{electrolyte}';"
                                )

        elif time:
            return self.get_data(f"SELECT * FROM samples WHERE time = {time};")

        elif temperature:
            return self.get_data(f"SELECT * FROM samples WHERE temperature = {temperature};")

        elif current:
            return self.get_data(f"SELECT * FROM samples WHERE current = {current};")

        elif voltage:
            return self.get_data(f"SELECT * FROM samples WHERE voltage = {voltage};")

        elif electrolyte:
            return self.get_data(f"SELECT * FROM samples WHERE electrolyte = '{electrolyte}';")



class MatplotlibCanvas(FigureCanvasQTAgg):
	def __init__(self,parent=None, dpi = 120):
		fig = Figure(dpi = dpi)
		self.axes = fig.add_subplot(111)
		super(MatplotlibCanvas,self).__init__(fig)
		#fig.tight_layout() #  uncomment for tight layout


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 640)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icons/logo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setStyleSheet("background-color: rgb(37, 37, 54);\n"
"color: rgb(255, 255, 255);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.tab)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.frame = QtWidgets.QFrame(self.tab)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.frame)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.gridLayout_6 = QtWidgets.QGridLayout()
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.groupBox_5 = QtWidgets.QGroupBox(self.frame)
        self.groupBox_5.setObjectName("groupBox_5")
        self.gridLayout_10 = QtWidgets.QGridLayout(self.groupBox_5)
        self.gridLayout_10.setObjectName("gridLayout_10")
        self.widget = QtWidgets.QWidget(self.groupBox_5)
        self.widget.setObjectName("widget")
        self.gridLayout_13 = QtWidgets.QGridLayout(self.widget)
        self.gridLayout_13.setObjectName("gridLayout_13")
        self.gridLayout_11 = QtWidgets.QGridLayout()
        self.gridLayout_11.setObjectName("gridLayout_11")
        self.verticalLayout_12 = QtWidgets.QVBoxLayout()
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        self.inMinute_1 = QtWidgets.QLabel(self.widget)
        self.inMinute_1.setObjectName("inMinute_1")
        self.verticalLayout_12.addWidget(self.inMinute_1)
        self.inDegree_1 = QtWidgets.QLabel(self.widget)
        self.inDegree_1.setObjectName("inDegree_1")
        self.verticalLayout_12.addWidget(self.inDegree_1)
        self.inAmper_1 = QtWidgets.QLabel(self.widget)
        self.inAmper_1.setObjectName("inAmper_1")
        self.verticalLayout_12.addWidget(self.inAmper_1)
        self.inVolt_1 = QtWidgets.QLabel(self.widget)
        self.inVolt_1.setObjectName("inVolt_1")
        self.verticalLayout_12.addWidget(self.inVolt_1)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.concentration_cmbx_3 = QtWidgets.QComboBox(self.widget)
        self.concentration_cmbx_3.setEditable(True)
        self.concentration_cmbx_3.setObjectName("concentration_cmbx_3")
        self.concentration_cmbx_3.addItem("")
        self.concentration_cmbx_3.addItem("")
        self.concentration_cmbx_3.addItem("")
        self.concentration_cmbx_3.addItem("")
        self.horizontalLayout_4.addWidget(self.concentration_cmbx_3)
        self.percent_lbl = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.percent_lbl.setFont(font)
        self.percent_lbl.setObjectName("percent_lbl")
        self.horizontalLayout_4.addWidget(self.percent_lbl)
        self.verticalLayout_12.addLayout(self.horizontalLayout_4)
        self.gridLayout_11.addLayout(self.verticalLayout_12, 0, 2, 1, 1)
        self.inputParamsLayout_4 = QtWidgets.QVBoxLayout()
        self.inputParamsLayout_4.setObjectName("inputParamsLayout_4")
        self.timeLine_1 = QtWidgets.QLineEdit(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.timeLine_1.sizePolicy().hasHeightForWidth())
        self.timeLine_1.setSizePolicy(sizePolicy)
        self.timeLine_1.setObjectName("timeLine_1")
        self.inputParamsLayout_4.addWidget(self.timeLine_1)
        self.temperatureLine_1 = QtWidgets.QLineEdit(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.temperatureLine_1.sizePolicy().hasHeightForWidth())
        self.temperatureLine_1.setSizePolicy(sizePolicy)
        self.temperatureLine_1.setObjectName("temperatureLine_1")
        self.inputParamsLayout_4.addWidget(self.temperatureLine_1)
        self.currentLine_1 = QtWidgets.QLineEdit(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.currentLine_1.sizePolicy().hasHeightForWidth())
        self.currentLine_1.setSizePolicy(sizePolicy)
        self.currentLine_1.setObjectName("currentLine_1")
        self.inputParamsLayout_4.addWidget(self.currentLine_1)
        self.voltageLine_1 = QtWidgets.QLineEdit(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.voltageLine_1.sizePolicy().hasHeightForWidth())
        self.voltageLine_1.setSizePolicy(sizePolicy)
        self.voltageLine_1.setObjectName("voltageLine_1")
        self.inputParamsLayout_4.addWidget(self.voltageLine_1)
        self.comboBox_1 = QtWidgets.QComboBox(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.comboBox_1.sizePolicy().hasHeightForWidth())
        self.comboBox_1.setSizePolicy(sizePolicy)
        self.comboBox_1.setObjectName("comboBox_1")
        self.comboBox_1.addItem("")
        self.comboBox_1.addItem("")
        self.comboBox_1.addItem("")
        self.comboBox_1.addItem("")
        self.inputParamsLayout_4.addWidget(self.comboBox_1)
        self.gridLayout_11.addLayout(self.inputParamsLayout_4, 0, 1, 1, 1)
        self.topInwordParamsLayout_5 = QtWidgets.QVBoxLayout()
        self.topInwordParamsLayout_5.setObjectName("topInwordParamsLayout_5")
        self.inwordTime_1 = QtWidgets.QLabel(self.widget)
        self.inwordTime_1.setObjectName("inwordTime_1")
        self.topInwordParamsLayout_5.addWidget(self.inwordTime_1)
        self.inwordTemperature_1 = QtWidgets.QLabel(self.widget)
        self.inwordTemperature_1.setObjectName("inwordTemperature_1")
        self.topInwordParamsLayout_5.addWidget(self.inwordTemperature_1)
        self.inwordCurrent_1 = QtWidgets.QLabel(self.widget)
        self.inwordCurrent_1.setObjectName("inwordCurrent_1")
        self.topInwordParamsLayout_5.addWidget(self.inwordCurrent_1)
        self.inwordVoltage_1 = QtWidgets.QLabel(self.widget)
        self.inwordVoltage_1.setObjectName("inwordVoltage_1")
        self.topInwordParamsLayout_5.addWidget(self.inwordVoltage_1)
        self.inwordElectrolyte_1 = QtWidgets.QLabel(self.widget)
        self.inwordElectrolyte_1.setObjectName("inwordElectrolyte_1")
        self.topInwordParamsLayout_5.addWidget(self.inwordElectrolyte_1)
        self.gridLayout_11.addLayout(self.topInwordParamsLayout_5, 0, 0, 1, 1)
        self.gridLayout_13.addLayout(self.gridLayout_11, 0, 0, 1, 1)
        self.gridLayout_10.addWidget(self.widget, 1, 1, 1, 1)
        self.predict_btn = QtWidgets.QPushButton(self.groupBox_5)
        self.predict_btn.setObjectName("predict_btn")
        self.gridLayout_10.addWidget(self.predict_btn, 2, 1, 1, 1)
        self.anodizingLbl = QtWidgets.QLabel(self.groupBox_5)
        self.anodizingLbl.setAlignment(QtCore.Qt.AlignCenter)
        self.anodizingLbl.setObjectName("anodizingLbl")
        self.gridLayout_10.addWidget(self.anodizingLbl, 0, 1, 1, 1)
        self.gridLayout_6.addWidget(self.groupBox_5, 0, 0, 1, 1)
        self.groupBox_6 = QtWidgets.QGroupBox(self.frame)
        self.groupBox_6.setObjectName("groupBox_6")
        self.gridLayout_14 = QtWidgets.QGridLayout(self.groupBox_6)
        self.gridLayout_14.setObjectName("gridLayout_14")
        self.save_btn = QtWidgets.QPushButton(self.groupBox_6)
        self.save_btn.setObjectName("save_btn")
        self.gridLayout_14.addWidget(self.save_btn, 2, 0, 1, 1)
        self.widget_2 = QtWidgets.QWidget(self.groupBox_6)
        self.widget_2.setObjectName("widget_2")
        self.gridLayout_16 = QtWidgets.QGridLayout(self.widget_2)
        self.gridLayout_16.setObjectName("gridLayout_16")
        self.gridLayout_15 = QtWidgets.QGridLayout()
        self.gridLayout_15.setObjectName("gridLayout_15")
        self.verticalLayout_14 = QtWidgets.QVBoxLayout()
        self.verticalLayout_14.setObjectName("verticalLayout_14")
        self.f_thickness_lbl = QtWidgets.QLabel(self.widget_2)
        self.f_thickness_lbl.setObjectName("f_thickness_lbl")
        self.verticalLayout_14.addWidget(self.f_thickness_lbl)
        self.diameter_lbl = QtWidgets.QLabel(self.widget_2)
        self.diameter_lbl.setObjectName("diameter_lbl")
        self.verticalLayout_14.addWidget(self.diameter_lbl)
        self.w_thickness_lbl = QtWidgets.QLabel(self.widget_2)
        self.w_thickness_lbl.setObjectName("w_thickness_lbl")
        self.verticalLayout_14.addWidget(self.w_thickness_lbl)
        self.porosity_lbl = QtWidgets.QLabel(self.widget_2)
        self.porosity_lbl.setObjectName("porosity_lbl")
        self.verticalLayout_14.addWidget(self.porosity_lbl)
        self.conductivity_lbl = QtWidgets.QLabel(self.widget_2)
        self.conductivity_lbl.setObjectName("conductivity_lbl")
        self.verticalLayout_14.addWidget(self.conductivity_lbl)
        self.gridLayout_15.addLayout(self.verticalLayout_14, 0, 1, 1, 1)
        self.verticalLayout_13 = QtWidgets.QVBoxLayout()
        self.verticalLayout_13.setObjectName("verticalLayout_13")
        self.label_37 = QtWidgets.QLabel(self.widget_2)
        self.label_37.setObjectName("label_37")
        self.verticalLayout_13.addWidget(self.label_37)
        self.label_38 = QtWidgets.QLabel(self.widget_2)
        self.label_38.setObjectName("label_38")
        self.verticalLayout_13.addWidget(self.label_38)
        self.label_39 = QtWidgets.QLabel(self.widget_2)
        self.label_39.setObjectName("label_39")
        self.verticalLayout_13.addWidget(self.label_39)
        self.label_40 = QtWidgets.QLabel(self.widget_2)
        self.label_40.setObjectName("label_40")
        self.verticalLayout_13.addWidget(self.label_40)
        self.label_41 = QtWidgets.QLabel(self.widget_2)
        self.label_41.setObjectName("label_41")
        self.verticalLayout_13.addWidget(self.label_41)
        self.gridLayout_15.addLayout(self.verticalLayout_13, 0, 0, 1, 1)
        self.gridLayout_16.addLayout(self.gridLayout_15, 1, 0, 1, 1)
        self.gridLayout_14.addWidget(self.widget_2, 1, 0, 1, 1)
        self.filmLbl = QtWidgets.QLabel(self.groupBox_6)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.filmLbl.sizePolicy().hasHeightForWidth())
        self.filmLbl.setSizePolicy(sizePolicy)
        self.filmLbl.setAlignment(QtCore.Qt.AlignCenter)
        self.filmLbl.setObjectName("filmLbl")
        self.gridLayout_14.addWidget(self.filmLbl, 0, 0, 1, 1)
        self.gridLayout_6.addWidget(self.groupBox_6, 0, 1, 1, 1)
        self.groupBox_7 = QtWidgets.QGroupBox(self.frame)
        self.groupBox_7.setObjectName("groupBox_7")
        self.gridLayout_18 = QtWidgets.QGridLayout(self.groupBox_7)
        self.gridLayout_18.setObjectName("gridLayout_18")
        self.gridLayout_4 = QtWidgets.QGridLayout()
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.gridLayout_18.addLayout(self.gridLayout_4, 0, 0, 1, 1)
        self.gridLayout_6.addWidget(self.groupBox_7, 1, 1, 1, 1)
        self.groupBox_8 = QtWidgets.QGroupBox(self.frame)
        self.groupBox_8.setObjectName("groupBox_8")
        self.gridLayout_12 = QtWidgets.QGridLayout(self.groupBox_8)
        self.gridLayout_12.setObjectName("gridLayout_12")
        self.widget_3 = QtWidgets.QWidget(self.groupBox_8)
        self.widget_3.setObjectName("widget_3")
        self.gridLayout_17 = QtWidgets.QGridLayout(self.widget_3)
        self.gridLayout_17.setObjectName("gridLayout_17")
        self.gridLayout_8 = QtWidgets.QGridLayout()
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.paramsGraphLayout = QtWidgets.QVBoxLayout()
        self.paramsGraphLayout.setObjectName("paramsGraphLayout")
        self.temperatureGraph = QtWidgets.QFrame(self.widget_3)
        self.temperatureGraph.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.temperatureGraph.setFrameShadow(QtWidgets.QFrame.Raised)
        self.temperatureGraph.setObjectName("temperatureGraph")
        self.paramsGraphLayout.addWidget(self.temperatureGraph)
        self.currentGraph = QtWidgets.QFrame(self.widget_3)
        self.currentGraph.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.currentGraph.setFrameShadow(QtWidgets.QFrame.Raised)
        self.currentGraph.setObjectName("currentGraph")
        self.paramsGraphLayout.addWidget(self.currentGraph)
        self.voltageGraph = QtWidgets.QFrame(self.widget_3)
        self.voltageGraph.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.voltageGraph.setFrameShadow(QtWidgets.QFrame.Raised)
        self.voltageGraph.setObjectName("voltageGraph")
        self.paramsGraphLayout.addWidget(self.voltageGraph)
        self.gridLayout_8.addLayout(self.paramsGraphLayout, 0, 2, 1, 1)
        self.topInwordParamsLayout_7 = QtWidgets.QVBoxLayout()
        self.topInwordParamsLayout_7.setObjectName("topInwordParamsLayout_7")
        self.inDegree_2 = QtWidgets.QLabel(self.widget_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.inDegree_2.sizePolicy().hasHeightForWidth())
        self.inDegree_2.setSizePolicy(sizePolicy)
        self.inDegree_2.setObjectName("inDegree_2")
        self.topInwordParamsLayout_7.addWidget(self.inDegree_2)
        self.inAmper_2 = QtWidgets.QLabel(self.widget_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.inAmper_2.sizePolicy().hasHeightForWidth())
        self.inAmper_2.setSizePolicy(sizePolicy)
        self.inAmper_2.setObjectName("inAmper_2")
        self.topInwordParamsLayout_7.addWidget(self.inAmper_2)
        self.inVolt_2 = QtWidgets.QLabel(self.widget_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.inVolt_2.sizePolicy().hasHeightForWidth())
        self.inVolt_2.setSizePolicy(sizePolicy)
        self.inVolt_2.setObjectName("inVolt_2")
        self.topInwordParamsLayout_7.addWidget(self.inVolt_2)
        self.inMinute_2 = QtWidgets.QLabel(self.widget_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.inMinute_2.sizePolicy().hasHeightForWidth())
        self.inMinute_2.setSizePolicy(sizePolicy)
        self.inMinute_2.setObjectName("inMinute_2")
        self.topInwordParamsLayout_7.addWidget(self.inMinute_2)
        self.gridLayout_8.addLayout(self.topInwordParamsLayout_7, 0, 1, 1, 1)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.topInwordParamsLayout_6 = QtWidgets.QVBoxLayout()
        self.topInwordParamsLayout_6.setObjectName("topInwordParamsLayout_6")
        self.inwordTemperature_2 = QtWidgets.QLabel(self.widget_3)
        self.inwordTemperature_2.setObjectName("inwordTemperature_2")
        self.topInwordParamsLayout_6.addWidget(self.inwordTemperature_2)
        self.inwordCurrent_2 = QtWidgets.QLabel(self.widget_3)
        self.inwordCurrent_2.setObjectName("inwordCurrent_2")
        self.topInwordParamsLayout_6.addWidget(self.inwordCurrent_2)
        self.inwordVoltage_2 = QtWidgets.QLabel(self.widget_3)
        self.inwordVoltage_2.setObjectName("inwordVoltage_2")
        self.topInwordParamsLayout_6.addWidget(self.inwordVoltage_2)
        self.inwordTime_2 = QtWidgets.QLabel(self.widget_3)
        self.inwordTime_2.setObjectName("inwordTime_2")
        self.topInwordParamsLayout_6.addWidget(self.inwordTime_2)
        self.horizontalLayout.addLayout(self.topInwordParamsLayout_6)
        self.gridLayout_8.addLayout(self.horizontalLayout, 0, 0, 1, 1)
        self.gridLayout_17.addLayout(self.gridLayout_8, 0, 0, 1, 1)
        self.gridLayout_12.addWidget(self.widget_3, 0, 1, 1, 1)
        self.start_btn = QtWidgets.QPushButton(self.groupBox_8)
        self.start_btn.setObjectName("start_btn")
        self.gridLayout_12.addWidget(self.start_btn, 1, 1, 1, 1)
        self.stop_btn = QtWidgets.QPushButton(self.groupBox_8)
        self.stop_btn.setObjectName("stop_btn")
        self.gridLayout_12.addWidget(self.stop_btn, 2, 1, 1, 1)
        self.gridLayout_6.addWidget(self.groupBox_8, 1, 0, 1, 1)
        self.gridLayout_6.setColumnStretch(0, 2)
        self.gridLayout_6.setColumnStretch(1, 2)
        self.gridLayout_7.addLayout(self.gridLayout_6, 0, 0, 1, 1)
        self.gridLayout_2.addWidget(self.frame, 0, 0, 1, 1)
        self.gridLayout_3.addLayout(self.gridLayout_2, 0, 0, 1, 1)
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.tab_2)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.frame_2 = QtWidgets.QFrame(self.tab_2)
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.gridLayout_24 = QtWidgets.QGridLayout(self.frame_2)
        self.gridLayout_24.setObjectName("gridLayout_24")
        self.gridLayout_21 = QtWidgets.QGridLayout()
        self.gridLayout_21.setObjectName("gridLayout_21")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.gridLayout_22 = QtWidgets.QGridLayout()
        self.gridLayout_22.setObjectName("gridLayout_22")
        self.voltageLine_2 = QtWidgets.QLineEdit(self.frame_2)
        self.voltageLine_2.setObjectName("voltageLine_2")
        self.gridLayout_22.addWidget(self.voltageLine_2, 0, 7, 1, 1)
        self.temperatureLine_2 = QtWidgets.QLineEdit(self.frame_2)
        self.temperatureLine_2.setObjectName("temperatureLine_2")
        self.gridLayout_22.addWidget(self.temperatureLine_2, 0, 5, 1, 1)
        self.timeLine_2 = QtWidgets.QLineEdit(self.frame_2)
        self.timeLine_2.setObjectName("timeLine_2")
        self.gridLayout_22.addWidget(self.timeLine_2, 0, 2, 1, 1)
        self.comboBox_2 = QtWidgets.QComboBox(self.frame_2)
        self.comboBox_2.setObjectName("comboBox_2")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.gridLayout_22.addWidget(self.comboBox_2, 0, 8, 1, 1)
        self.currentLine_2 = QtWidgets.QLineEdit(self.frame_2)
        self.currentLine_2.setObjectName("currentLine_2")
        self.gridLayout_22.addWidget(self.currentLine_2, 0, 6, 1, 1)
        self.verticalLayout.addLayout(self.gridLayout_22)
        self.gridLayout_23 = QtWidgets.QGridLayout()
        self.gridLayout_23.setObjectName("gridLayout_23")
        self.reload_btn = QtWidgets.QPushButton(self.frame_2)
        self.reload_btn.setObjectName("reload_btn")
        self.gridLayout_23.addWidget(self.reload_btn, 0, 1, 1, 1)
        self.search_btn = QtWidgets.QPushButton(self.frame_2)
        self.search_btn.setObjectName("search_btn")
        self.gridLayout_23.addWidget(self.search_btn, 0, 3, 1, 1)
        self.export_btn = QtWidgets.QPushButton(self.frame_2)
        self.export_btn.setObjectName("export_btn")
        self.gridLayout_23.addWidget(self.export_btn, 0, 2, 1, 1)
        self.verticalLayout.addLayout(self.gridLayout_23)
        self.gridLayout_21.addLayout(self.verticalLayout, 0, 0, 1, 1)
        self.gridLayout_26 = QtWidgets.QGridLayout()
        self.gridLayout_26.setObjectName("gridLayout_26")
        self.tableWidget = QtWidgets.QTableWidget(self.frame_2)
        self.tableWidget.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(6)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(5, item)
        self.tableWidget.horizontalHeader().setStretchLastSection(True)
        self.tableWidget.verticalHeader().setDefaultSectionSize(30)
        self.gridLayout_26.addWidget(self.tableWidget, 0, 0, 1, 1)
        self.gridLayout_21.addLayout(self.gridLayout_26, 1, 0, 1, 1)
        self.gridLayout_24.addLayout(self.gridLayout_21, 0, 0, 1, 1)
        self.gridLayout_5.addWidget(self.frame_2, 0, 0, 1, 1)
        self.tabWidget.addTab(self.tab_2, "")
        self.gridLayout.addWidget(self.tabWidget, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.my_db = DBConnection()
        self.my_db.connect()

        self.canv = MatplotlibCanvas(self)
        self.df = []

        self.toolbar = Navi(self.canv, self.groupBox_7)

        self.save_btn.clicked.connect(self.save)
        self.search_btn.clicked.connect(self.search_in_db)
        self.export_btn.clicked.connect(self.export_csv)
        self.reload_btn.clicked.connect(self.reload)

        self.read_data()
        self.update()


    def predict(self):
        pass # IDEA: start learning


    def save(self):
        time = int(self.timeLine_1.text())
        temperature = int(self.temperatureLine_1.text())
        current = int(self.currentLine_1.text())
        voltage = int(self.voltageLine_1.text())
        electrolyte = self.comboBox_1.currentText()

        self.my_db.write_to_db(time, temperature, current, voltage, electrolyte)

        # IDEA: here inputs and outputs are gonna be saved simultaneously

        time = self.timeLine_1.setText("")
        temperature = self.temperatureLine_1.setText("")
        current = self.currentLine_1.setText("")
        voltage = self.voltageLine_1.setText("")
        electrolyte = self.comboBox_1.setCurrentIndex(0)
        self.concentration_cmbx_3.setCurrentIndex(0)


    def start(self):
        pass # IDEA: start manufacturing


    def stop(arg):
        pass # IDEA: stop manufacturing


    def search_in_db(self):
        time = self.timeLine_2.text()
        temperature = self.temperatureLine_2.text()
        current = self.currentLine_2.text()
        voltage = self.voltageLine_2.text()
        electrolyte = self.comboBox_2.currentText()

        data = self.my_db.search(time, temperature, current, voltage, electrolyte)

        if not data.empty:
            self.tableWidget.setRowCount(len(data))
            for row, index in zip(range(len(data)), data.index):
                self.tableWidget.setItem(row, 0, QtWidgets.QTableWidgetItem(str(data['Time'][index])))
                self.tableWidget.setItem(row, 1, QtWidgets.QTableWidgetItem(str(data['Temperature'][index])))
                self.tableWidget.setItem(row, 2, QtWidgets.QTableWidgetItem(str(data['Current'][index])))
                self.tableWidget.setItem(row, 3, QtWidgets.QTableWidgetItem(str(data['Voltage'][index])))
                self.tableWidget.setItem(row, 4, QtWidgets.QTableWidgetItem(data['Electrlyte'][index]))
        else:
            self.tableWidget.setRowCount(0)



    def export_csv(self):
        fname = QtWidgets.QFileDialog().getExistingDirectory()
        self.my_db.export(fname)


    def reload(self):
        data = self.my_db.get_data()

        time = self.timeLine_2.setText("")
        temperature = self.temperatureLine_2.setText("")
        current = self.currentLine_2.setText("")
        voltage = self.voltageLine_2.setText("")
        electrolyte = self.comboBox_2.setCurrentIndex(0)

        if not data.empty:
            self.tableWidget.setRowCount(len(data))
            for row, index in zip(range(len(data)), data.index):
                self.tableWidget.setItem(row, 0, QtWidgets.QTableWidgetItem(str(data['Time'][index])))
                self.tableWidget.setItem(row, 1, QtWidgets.QTableWidgetItem(str(data['Temperature'][index])))
                self.tableWidget.setItem(row, 2, QtWidgets.QTableWidgetItem(str(data['Current'][index])))
                self.tableWidget.setItem(row, 3, QtWidgets.QTableWidgetItem(str(data['Voltage'][index])))
                self.tableWidget.setItem(row, 4, QtWidgets.QTableWidgetItem(data['Electrlyte'][index]))

    def read_data(self):
        dtypes = {
			'Time': 'float64',
			'Temperature': 'float64',
			'Current': 'float64',
			'Voltage': 'float64'
		}
        self.df = pd.read_csv('/home/ml_rev/Загрузки/data.csv')
        self.df = self.df.astype(dtypes)


    def update(self):
        plt.clf()
        plt.style.use('cyberpunk')
        try:
            self.gridLayout_4.removeWidget(self.toolbar)
            self.gridLayout_4.removeWidget(self.canv)

            sip.delete(self.toolbar)
            sip.delete(self.canv)
            self.toolbar = None
            self.canv = None
        except Exception as e:
            print(e)
            pass

        self.canv = MatplotlibCanvas(self)
        self.toolbar = Navi(self.canv, self.groupBox_7)

        self.gridLayout_4.addWidget(self.toolbar)
        self.gridLayout_4.addWidget(self.canv)

        # self.gridLayout_2.setColumnStretch(4, 1)
        # self.gridLayout_2.setRowStretch(1, 1)

        self.canv.axes.cla()
        ax = self.canv.axes
        self.df.iloc[:, :-1].plot(ax = self.canv.axes)
        legend = ax.legend()
        legend.set_draggable(True)

        ax.set_xlabel('X axis')
        ax.set_ylabel('Y axis')
        ax.set_title('Graph')

        self.canv.draw()
        # plt.tight_layout()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Anodizing Automation"))
        self.groupBox_5.setTitle(_translate("MainWindow", "Input parameters"))
        self.inMinute_1.setText(_translate("MainWindow", "sec"))
        self.inDegree_1.setText(_translate("MainWindow", "°C"))
        self.inAmper_1.setText(_translate("MainWindow", "mA"))
        self.inVolt_1.setText(_translate("MainWindow", "V"))
        self.concentration_cmbx_3.setItemText(0, _translate("MainWindow", "Select"))
        self.concentration_cmbx_3.setItemText(1, _translate("MainWindow", "25"))
        self.concentration_cmbx_3.setItemText(2, _translate("MainWindow", "50"))
        self.concentration_cmbx_3.setItemText(3, _translate("MainWindow", "75"))
        self.percent_lbl.setText(_translate("MainWindow", "%"))
        self.comboBox_1.setItemText(0, _translate("MainWindow", "Select"))
        self.comboBox_1.setItemText(1, _translate("MainWindow", "H3PO4"))
        self.comboBox_1.setItemText(2, _translate("MainWindow", "C2H2O4"))
        self.comboBox_1.setItemText(3, _translate("MainWindow", "H3BO3"))
        self.inwordTime_1.setText(_translate("MainWindow", "Time"))
        self.inwordTemperature_1.setText(_translate("MainWindow", "Temperature"))
        self.inwordCurrent_1.setText(_translate("MainWindow", "Current"))
        self.inwordVoltage_1.setText(_translate("MainWindow", "Voltage"))
        self.inwordElectrolyte_1.setText(_translate("MainWindow", "Electrolyte"))
        self.predict_btn.setText(_translate("MainWindow", "Predict"))
        self.anodizingLbl.setText(_translate("MainWindow", "Anodizing parameters"))
        self.groupBox_6.setTitle(_translate("MainWindow", "Output parameters"))
        self.save_btn.setText(_translate("MainWindow", "Save"))
        self.f_thickness_lbl.setText(_translate("MainWindow", "cm"))
        self.diameter_lbl.setText(_translate("MainWindow", "cm"))
        self.w_thickness_lbl.setText(_translate("MainWindow", "cm"))
        self.porosity_lbl.setText(_translate("MainWindow", "Np/cm^2"))
        self.conductivity_lbl.setText(_translate("MainWindow", "S"))
        self.label_37.setText(_translate("MainWindow", "Film thickness"))
        self.label_38.setText(_translate("MainWindow", "Pore diameter"))
        self.label_39.setText(_translate("MainWindow", "Wall thickness"))
        self.label_40.setText(_translate("MainWindow", "Porosity"))
        self.label_41.setText(_translate("MainWindow", "Сonductivity"))
        self.filmLbl.setText(_translate("MainWindow", "Film parameters"))
        self.groupBox_7.setTitle(_translate("MainWindow", "Graphs"))
        self.groupBox_8.setTitle(_translate("MainWindow", "Monitoring"))
        self.inDegree_2.setText(_translate("MainWindow", "°C"))
        self.inAmper_2.setText(_translate("MainWindow", "mA"))
        self.inVolt_2.setText(_translate("MainWindow", "V"))
        self.inMinute_2.setText(_translate("MainWindow", "sec"))
        self.inwordTemperature_2.setText(_translate("MainWindow", "Temperature"))
        self.inwordCurrent_2.setText(_translate("MainWindow", "Current"))
        self.inwordVoltage_2.setText(_translate("MainWindow", "Voltage"))
        self.inwordTime_2.setText(_translate("MainWindow", "Time"))
        self.start_btn.setText(_translate("MainWindow", "Start"))
        self.stop_btn.setText(_translate("MainWindow", "Stop"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Main"))
        self.voltageLine_2.setPlaceholderText(_translate("MainWindow", "Voltage"))
        self.temperatureLine_2.setPlaceholderText(_translate("MainWindow", "Temperature"))
        self.timeLine_2.setPlaceholderText(_translate("MainWindow", "Time"))
        self.comboBox_2.setItemText(0, _translate("MainWindow", "Select"))
        self.comboBox_2.setItemText(1, _translate("MainWindow", "H3PO4"))
        self.comboBox_2.setItemText(2, _translate("MainWindow", "C2H2O4"))
        self.comboBox_2.setItemText(3, _translate("MainWindow", "H3BO3"))
        self.currentLine_2.setPlaceholderText(_translate("MainWindow", "Current"))
        self.reload_btn.setText(_translate("MainWindow", "Reload"))
        self.search_btn.setText(_translate("MainWindow", "Search"))
        self.export_btn.setText(_translate("MainWindow", "Export as csv"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Time"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Temperature"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Current"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Voltage"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Electrolyte"))
        item = self.tableWidget.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "Predicted"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Data"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
